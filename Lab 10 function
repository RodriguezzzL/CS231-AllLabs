.data
myArray: .word 0,0,0,0,0,0,0,0,0,0
prompt: .asciiz "Enter the number of elements: "
errorless: .asciiz "Number is less than 0 please try again: "
errorgreater: .asciiz "Number is greater than 10 please try again: "
enter: .asciiz "Enter a number: "
output: .asciiz "This is your median"

nextline: .asciiz "\n"

.text
la $s2,myArray #loading myArray adress to $s2

li $s0,0 #loading 0 to s0

li $s1,10 #loading 10 to s1



li $v0,4
la $a0,prompt #printing prompt
syscall

input:
li $v0,5 #getting user input
syscall

add $s7,$v0,0 #moving v0 to t1


add $t3,$t1,0
blt $t1,$s0,lessthan #branch less than if less than 0

bgt $t1,$s1,greater #branch greater than if greater than 10
#after 1-10


add $a0,$s7,$0 # counter
add $a1,$s2,$0 #address

jal fill

la $s4,myArray

add $a0,$s4,$0 #myarray address
add $a1,$s7,$0 #counter
jal max
add $t4,$v0,$0

li $v0,1
add $a0,$t4,$0
syscall

li $v0,10
syscall

lessthan: #label if less than 0
li $v0,4
la $a0,errorless # printing error for less than 0
syscall
j input

greater: #label if greater than 10
li $v0,4
la $a0,errorgreater # print error for greater than 10
syscall
j input

fill:
add $t2,$a1,$0 # moving address
add $t1,$a0,$0 # moving counter
loop:
beq $t1,$0, doneloop#checking loop condition if greater than 0

li $v0,4
la $a0,enter #print enter prompt
syscall 

li $v0,5 #getting users input
syscall

sw $v0,0($s2) #storting to adress of s2

addi $s2,$s2,4 #moving 4 bytes

addi $t1,$t1,-1 #subtracting 1 from counter
j loop
doneloop:
jr $ra

max:
add $t0,$a0,$0 #myarray address
add $t1,$a1,$0 #counter

beq $t1,$0 donemax

lw $t3,0($t0)

addi $t0,$t0,4
addi $t1,$t1,-1

bgt $t3,$t2,swap

j max

donemax:
add $v0,$t4,$0
jr $ra

swap: 
add $t4,$t3,$0
j max

