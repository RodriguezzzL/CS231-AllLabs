.data
myArray: .word 0,0,0,0,0,0,0,0,0,0
prompt: .asciiz "Enter the number of elements: "
errorless: .asciiz "Number is less than 0 please try again: "
errorgreater: .asciiz "Number is greater than 10 please try again: "
enter: .asciiz "Enter a number: "
endprompt: .asciiz "This is your total: "

nextline: .asciiz "\n"

.text
la $s2,myArray #loading myArray adress to $s2

li $s0,0 #loading 0 to s0

li $s1,10 #loading 10 to s1



li $v0,4
la $a0,prompt #printing prompt
syscall

input:
li $v0,5 #getting user input
syscall

add $s3,$v0,0 #moving v0 to t1 #T1 TO S3 COUNTER





blt $s3,$s0,lessthan #branch less than if less than 0

bgt $s3,$s1,greater #branch greater than if greater than 10
#after 1-10


add $a0, $s2, $0 #pass array pointer is a0
add $a1,$s3,$0 #moving counter to a1 parameter

jal loadArray #jump to function load array

la $s2,myArray # reseting address to myarray

add $a1,$s2,$0 #passing address 
add $a2,$s3,$0 #passing counter
jal addsub
add $s4,$v0,$0 #moving return value to s4

li $v0,4
la $a0,endprompt # printing end prompt
syscall
li $v0,1
add $a0,$s4,$0 #print total value
syscall



li $v0,10 # end program
syscall





addsub:
add $t1,$a1,$0 #moving address 
add $t2,$a2,$0 #moving counter

next:
beq $t2,$0,adddone #branch if equal to 0 for counter

lw $t3,0($t1) #moving array value total to t3
add $t4,$t4,$t3 #adding to get total


add $t1,$t1,4 #moving to next element
add $t2,$t2,-1 # -1 from counter
j next

adddone:
add $v0,$t4,0 #return value
jr $ra #return address




loadArray:
add $t0,$a1,$0 #moving counter to t0
add $t1,$a0,$0 #moving address to t1
load_loop:
beq $t0,$0,done #checking loop condition if greater than 0

li $v0,4
la $a0,enter #print enter prompt
syscall 

li $v0,5 #getting users input
syscall

sw $v0,0($t1) #storting to adress of s2

addi $t1,$t1,4 #moving 4 bytes

addi $t0,$t0,-1 #subtracting 1 from counter
j load_loop
done:
jr $ra








lessthan: #label if less than 0
li $v0,4
la $a0,errorless # printing error for less than 0
syscall
j input

greater: #label if greater than 10
li $v0,4
la $a0,errorgreater # print error for greater than 10
syscall
j input
